{
  "_args": [
    [
      {
        "raw": "mongooser",
        "scope": null,
        "escapedName": "mongooser",
        "name": "mongooser",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/jeresoft/Documentos/node/nodejs/albums"
    ]
  ],
  "_from": "mongooser@latest",
  "_id": "mongooser@0.1.1",
  "_inCache": true,
  "_location": "/mongooser",
  "_npmUser": {
    "name": "aaron",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mongooser",
    "scope": null,
    "escapedName": "mongooser",
    "name": "mongooser",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongooser/-/mongooser-0.1.1.tgz",
  "_shasum": "73e1b7c84f681d28b0a863d9771e2755d21df11b",
  "_shrinkwrap": null,
  "_spec": "mongooser",
  "_where": "/home/jeresoft/Documentos/node/nodejs/albums",
  "author": {
    "name": "Aaron Heckmann",
    "email": "aaron.heckmann+github@gmail.com"
  },
  "bin": {
    "mongooser": "./bin/mongooser"
  },
  "bugs": {
    "url": "https://github.com/aheckmann/mongooser/issues"
  },
  "dependencies": {
    "commander": "0.6.1",
    "debug": "0.7.0",
    "mongoose": "3.6.x"
  },
  "description": "Mongoose REPL",
  "devDependencies": {
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "73e1b7c84f681d28b0a863d9771e2755d21df11b",
    "tarball": "https://registry.npmjs.org/mongooser/-/mongooser-0.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.4.2"
  },
  "homepage": "https://github.com/aheckmann/mongooser#readme",
  "maintainers": [
    {
      "name": "aaron",
      "email": "aaron.heckmann+github@gmail.com"
    }
  ],
  "name": "mongooser",
  "optionalDependencies": {},
  "readme": "#Mongooser\n===============\n\nMongoose REPL\n\n## install\n\n```\nnpm install mongooser -g\n```\n\n## usage\n\n```\nmongooser [options]\n\n  Options:\n\n    -h, --help           output usage information\n    -V, --version        output the version number\n    -c --config <path>   configuration path\n```\n\nYour configuration should be a module. The module should be formatted as follows:\n\n```js\nexports.connect = 'mongodb://localhost:port/dbname'\nexports.Users = 'path/to/a/schema'\nexports.Views = 'path/to/a/model'\nexports.Checkins = [ schema, options ]\n```\n\n### connection string _(required)_\n\n```\n// key must be named \"connect\"\nexports.connect = 'mongodb://localhost/name_of_db'\n```\n\n### Schemas/Models\n\nThere are three approaches to expose your models to the REPL:\n\n```\nexports.NameOfYourModel = 'path/to/your/schema'\n// or\nexports.NameOfYourModel = 'path/to/your/model'\n// or\nexports.NameOfYourModel = [ new Schema(..), schemaOptions ]\n```\n\nThe array approach allows us to quickly set up configuration by including the `Schema` and its options directly in the configuration file.\n\nSee the [test configuration](https://github.com/aheckmann/mongooser/blob/master/test/test.js) for another example.\n\n## repl\n\nWhen `mongooser` starts it exposes your `Models` globally:\n\n![](http://dl.dropbox.com/u/11198966/mongooser-startup.png)\n\nYou can query in traditional `Mongoose` fashion:\n\n![](http://dl.dropbox.com/u/11198966/mongooser-query.png)\n\nA few observations:\n\n  - `print`: is a global function available which prints query results to the repl nicely.\n  - `p`: is an alias of `print`\n  - executing a query dumps the query object to the repl first\n  - the `print` helper displays returned arguments in order\n  - `print` mimics nodejs repl behavior by assigning the 2nd argument passed to the global `_`.\n  - all queries, as with normal mongoose applications, are run asynchronously\n\n## globals\n\n  - `connection`: your db connection object\n  - `models`: array of each loaded Model name\n  - `schemas`: your schemas included in configuration\n  - `mongoose`: the `mongoose` module\n  - `ObjectId` the ObjectId constructor\n  - Models: each model created from your configuration\n\n## tests\n\nRun the tests with `make test`.\n\n[LICENSE](https://github.com/aheckmann/mongooser/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/aheckmann/mongooser.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.1.1"
}
